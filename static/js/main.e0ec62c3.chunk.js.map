{"version":3,"sources":["Search.js","Drawing.js","App.js","serviceWorker.js","index.js"],"names":["_","require","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedOption","onUpdate","setState","login","state","value","label","options","_this2","fetch","then","response","json","data","map","item","key","assign","react_default","a","createElement","react_select_esm","onChange","Component","color","in progress","checking","checked","todo","Drawing","getGithubName","concat","githubLogin","toLowerCase","getDataFromServer","localStorage","setItem","mentor","getItem","styleCV","parseInt","cv","styleCoreJS","corejs","styleMarkup","markup","styleActivist","activist","styleYoutube","youtube","styleScoreboard","scoreboard","styleGame","game","styleCourseWork","stylePresentation","presentation","style","background","newMentor","window","performance","navigation","type","removeItem","src_Search","Table","className","firebase","initializeApp","apiKey","authDomain","App","isSignedIn","uiConfig","signInFlow","signInOptions","auth","GithubAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","singOut","signOut","src_Drawing","currentUser","providerData","uid","onClick","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0ec62c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst _ = require('lodash');\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    const { login } = this.props;\n    this.state = {\n      selectedOption: { value: login, label: login },\n      options: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://gaddyya.github.io/rss-mentor-dashboard/result.json')\n      .then(response => response.json())\n      .then(data => _.map(data, (item, key) => Object.assign({\n        value: key,\n        label: key,\n      })))\n      .then(data => this.setState({\n        options: data,\n      }));\n  }\n\n  handleChange = (selectedOption) => {\n    const { onUpdate } = this.props;\n    this.setState({ selectedOption });\n    onUpdate({ selectedOption });\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n    const { options } = this.state;\n    return (\n      <div>\n        <Select\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  onUpdate: PropTypes.func.isRequired,\n  login: PropTypes.string.isRequired,\n};\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Search from './Search';\nimport './button.css';\n\nconst _ = require('lodash');\n\nconst color = {\n  'in progress': 'yellow',\n  checking: 'red',\n  checked: 'DarkRed',\n  todo: 'grey',\n};\n\nclass Drawing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      githubLogin: '',\n    };\n    const TYPE_RELOAD = 1;\n    if (window.performance) {\n      if (performance.navigation.type === TYPE_RELOAD) {\n        localStorage.removeItem('login');\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getGithubName();\n  }\n\n  getGithubName = () => {\n    const { login } = this.props;\n    fetch(`https://api.github.com/user/${login}`)\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({\n          githubLogin: data.login.toLowerCase(),\n        });\n        this.getDataFromServer();\n        return data.login;\n      })\n      .then(data => localStorage.setItem('mentor', data.toLowerCase()));\n  }\n\n  getDataFromServer = () => {\n    const { githubLogin } = this.state;\n    const mentor = localStorage.getItem('login') ? localStorage.getItem('mentor') : githubLogin;\n    fetch('https://gaddyya.github.io/rss-mentor-dashboard/result.json')\n      .then(response => response.json())\n      .then(data => data[mentor])\n      .then(data => _.map(data, (item, key) => {\n        const styleCV = (parseInt(item.cv, 10) || parseInt(item.cv, 10) === 0) ? 'green' : color[item.cv];\n        const styleCoreJS = (parseInt(item.corejs, 10) || parseInt(item.corejs, 10) === 0) ? 'green' : color[item.corejs];\n        const styleMarkup = (parseInt(item.markup, 10) || parseInt(item.markup, 10) === 0) ? 'green' : color[item.markup];\n        const styleActivist = (parseInt(item.activist, 10) || parseInt(item.activist, 10) === 0) ? 'green' : color[item.activist];\n        const styleYoutube = (parseInt(item.youtube, 10) || parseInt(item.youtube, 10) === 0) ? 'green' : color[item.youtube];\n        const styleScoreboard = (parseInt(item.scoreboard, 10) || parseInt(item.scoreboard, 10) === 0) ? 'green' : color[item.scoreboard];\n        const styleGame = (parseInt(item.game, 10) || parseInt(item.game, 10) === 0) ? 'green' : color[item.game];\n        const styleCourseWork = (parseInt(item['course work'], 10) || parseInt(item['course work'], 10) === 0) ? 'green' : color[item['course work']];\n        const stylePresentation = (parseInt(item.presentation, 10) || parseInt(item.presentation, 10) === 0) ? 'green' : color[item.presentation];\n\n        return (\n          <tr key={key}>\n            <td>{key}</td>\n            <td style={{ background: styleCV }}>{item.cv}</td>\n            <td style={{ background: styleCoreJS }}>{item.corejs}</td>\n            <td style={{ background: styleMarkup }}>{item.markup}</td>\n            <td style={{ background: styleActivist }}>{item.activist}</td>\n            <td style={{ background: styleYoutube }}>{item.youtube}</td>\n            <td style={{ background: styleScoreboard }}>{item.scoreboard}</td>\n            <td style={{ background: styleGame }}>{item.game}</td>\n            <td style={{ background: styleCourseWork }}>{item['course work']}</td>\n            <td style={{ background: stylePresentation }}>{item.presentation}</td>\n          </tr>\n        );\n      }))\n      .then(data => this.setState({\n        options: data,\n      }))\n      .then(localStorage.setItem('login', 'success'));\n  }\n\n  handleChange = (newMentor) => {\n    localStorage.setItem('mentor', newMentor.selectedOption.value);\n    this.getDataFromServer();\n  }\n\n  render() {\n    const { options } = this.state;\n    const { githubLogin } = this.state;\n    return (\n      <div>\n        { githubLogin && localStorage.getItem('login') ? (\n          <div>\n            <Search onUpdate={this.handleChange} login={githubLogin} />\n            <Table>\n              <thead>\n                <tr>\n                  <th />\n                  <th>CV</th>\n                  <th>CoreJS</th>\n                  <th>Markup</th>\n                  <th>Activist</th>\n                  <th>Youtube</th>\n                  <th>Scoreboard</th>\n                  <th>Game</th>\n                  <th>Course work</th>\n                  <th>Presentation</th>\n                </tr>\n              </thead>\n              <tbody>\n                {options}\n              </tbody>\n            </Table>\n          </div>) : (<p className=\"loading\">Loading</p>)\n       }\n      </div>\n    );\n  }\n}\n\nDrawing.propTypes = {\n  login: PropTypes.string.isRequired,\n};\n\nexport default Drawing;\n","import React, { Component } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport Drawing from './Drawing';\nimport './button.css';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyBQNcy5l4IJA0_rMjfufkVkiMG_CmtcnhU',\n  authDomain: 'mentor-dashboard-60fd7.firebaseapp.com',\n});\n\n\nclass App extends Component {\n  state = { isSignedIn: false }\n\n  uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false,\n    },\n\n  }\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ isSignedIn: !!user });\n    });\n  }\n\n  singOut = () => {\n    firebase.auth().signOut();\n    localStorage.removeItem('login');\n  }\n\n  render() {\n    const { isSignedIn } = this.state;\n    return (\n      <div className=\"App\">\n        {isSignedIn ? (\n          <div>\n            <Drawing login={firebase.auth().currentUser.providerData[0].uid} />\n            <button type=\"submit\" onClick={() => this.singOut()} className=\"buttonSignOut\">Sign out!</button>\n          </div>\n        ) : (\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((data) => {\n      const registration = data;\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}